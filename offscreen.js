console.log("🔍 OFFSCREEN DEBUG: RAG SCRIPT LOADING STARTED...");console.log("🔍 OFFSCREEN DEBUG: Date:",new Date().toISOString());try{chrome.runtime.sendMessage({type:"LOCAL_AI_STATUS",status:"Offscreen script loading...",progress:1,ready:!1}),console.log("🔍 OFFSCREEN DEBUG: Initial status message sent")}catch(e){console.log("🔍 OFFSCREEN DEBUG: Failed to send initial status:",e)}console.log("🔍 OFFSCREEN DEBUG: Basic script execution working");try{chrome.runtime.sendMessage({type:"LOCAL_AI_STATUS",status:"Offscreen HTML loaded!",progress:.5,ready:!1}),console.log("🔍 OFFSCREEN DEBUG: HTML status message sent")}catch(e){console.log("🔍 OFFSCREEN DEBUG: Failed to send HTML status:",e)}let i=!1;console.log("🔍 OFFSCREEN DEBUG: Setting up Web Worker for transformers.js...");const m=document.getElementById("status"),g=document.getElementById("progressBar"),f=document.getElementById("details");function E(e,s=null,t=null){m&&(m.textContent=e),s!==null&&g&&(g.style.width=`${s}%`),t&&f&&(f.textContent=t),e&&e.includes("Loading")&&e.includes("model")&&(y(),S(e)),chrome.runtime.sendMessage({type:"LOCAL_AI_STATUS",status:e,progress:s,ready:i})}function y(){const e=document.getElementById("modelProgress"),s=document.getElementById("downloadInfo");e&&e.style.display==="none"&&(e.style.display="block",s&&(s.style.display="block"))}function S(e,s){const t={classifier:{element:"scout",name:"Scout",emoji:"🔍"},embedding:{element:"indexer",name:"Indexer",emoji:"📊"},NER:{element:"extractor",name:"Extractor",emoji:"🏷️"},generative:{element:"synthesizer",name:"Synthesizer",emoji:"✨"}};let o=null;for(const[n,a]of Object.entries(t))if(e.toLowerCase().includes(n.toLowerCase())){o=a;break}if(o){const n=document.getElementById(`${o.element}Progress`),a=document.getElementById(`${o.element}Status`);n&&a&&(e.includes("Loading")?(n.style.width="50%",a.textContent="Downloading...",a.className="model-status downloading"):e.includes("loaded")&&(n.style.width="100%",a.textContent="Ready ✅",a.className="model-status complete"))}}let r=null,c=!1;function F(){console.log("🔍 OFFSCREEN DEBUG: Creating transformers.js Web Worker (local build)...");try{r=new Worker(chrome.runtime.getURL("transformers-worker.js")),r.onmessage=function(s){const t=s.data,{type:o}=t;switch(o){case"status":E(t.message,t.progress);break;case"init-complete":t.success?(console.log("🔍 OFFSCREEN DEBUG: All AI models initialized successfully!"),c=!0,i=!0,E("All AI models ready! ✅",100)):(console.error("🔍 OFFSCREEN DEBUG: AI model initialization failed:",t.error),u(new Error(t.error)));break;case"error":console.error("🔍 OFFSCREEN DEBUG: Worker error:",t.error),u(new Error(t.error||"Unknown worker error"));break;case"classify-result":case"embed-result":case"entities-result":case"generate-result":R(t);break;default:console.log("🔍 OFFSCREEN DEBUG: Unknown worker message:",o)}},r.onerror=function(s){console.error("🔍 OFFSCREEN DEBUG: Worker error:",s),u(s)};const e=chrome.runtime.getURL("/");console.log("🔍 OFFSCREEN DEBUG: Extension base URL:",e),E("Initializing AI models...",5),r.postMessage({type:"init",data:{extensionBaseURL:e}})}catch(e){console.error("🔍 OFFSCREEN DEBUG: Failed to create Web Worker:",e),u(e)}}function u(e){console.error("🔍 OFFSCREEN DEBUG: Transformers.js Web Worker failed:",e),E("❌ AI model initialization failed",0,e.message),chrome.runtime.sendMessage({type:"LOCAL_AI_ERROR",error:e.message||"Transformers.js Web Worker failed"})}function R(e){const{type:s,id:t}=e;switch(s){case"classify-result":console.log("🔍 OFFSCREEN DEBUG: Received classification result for ID:",t);break;case"embed-result":console.log("🔍 OFFSCREEN DEBUG: Received embedding result for ID:",t);break;case"entities-result":console.log("🔍 OFFSCREEN DEBUG: Received entities result for ID:",t);break;case"generate-result":console.log("🔍 OFFSCREEN DEBUG: Received generation result for ID:",t);break;default:console.log("🔍 OFFSCREEN DEBUG: Unknown AI result type:",s)}}try{chrome.runtime.sendMessage({type:"LOCAL_AI_STATUS",status:"Setting up transformers.js...",progress:2,ready:!1})}catch(e){console.log("🔍 OFFSCREEN DEBUG: Failed to send setup status:",e)}console.log("🔍 OFFSCREEN DEBUG: Starting Web Worker transformers.js loading...");try{chrome.runtime.sendMessage({type:"LOCAL_AI_STATUS",status:"Starting Web Worker approach...",progress:3,ready:!1})}catch(e){console.log("🔍 OFFSCREEN DEBUG: Failed to send Web Worker status:",e)}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",F):F();async function C(e){if(!c||!r)throw new Error("AI models not ready. Please wait for initialization to complete.");return new Promise((s,t)=>{const o=Date.now().toString(),n=a=>{const l=a.data;l.type==="embed-result"&&l.id===o?(r.removeEventListener("message",n),s(l.embedding)):l.type==="error"&&l.id===o&&(r.removeEventListener("message",n),t(new Error(l.error)))};r.addEventListener("message",n),r.postMessage({type:"embed",data:{id:o,text:e}})})}async function D(e,s={}){if(!c||!r)throw new Error("AI models not ready. Please wait for initialization to complete.");return new Promise((t,o)=>{const n=Date.now().toString(),a=l=>{const d=l.data;d.type==="generate-result"&&d.id===n?(r.removeEventListener("message",a),t(d.text)):d.type==="error"&&d.id===n&&(r.removeEventListener("message",a),o(new Error(d.error)))};r.addEventListener("message",a),r.postMessage({type:"generate",data:{id:n,prompt:e,...s}})})}chrome.runtime.onMessage.addListener((e,s,t)=>{switch(console.log("🔍 OFFSCREEN DEBUG: Received message:",e.type,e),e.type){case"INIT_LOCAL_AI":console.log("🔍 OFFSCREEN DEBUG: Starting model initialization..."),t({success:!0,ready:i});break;case"GENERATE_EMBEDDING":return c?C(e.text).then(o=>t({success:!0,embedding:o})).catch(o=>t({success:!1,error:o.message})):t({success:!1,error:"AI models not ready"}),!0;case"GENERATE_TEXT":return c?D(e.prompt,e.options||{}).then(o=>t({success:!0,text:o})).catch(o=>t({success:!1,error:o.message})):t({success:!1,error:"AI models not ready"}),!0;case"CHECK_STATUS":t({ready:i,workerReady:c,status:i?"Ready":"Not ready"});break;case"CHECK_LOCAL_AI_STATUS":t({ready:i,workerReady:c,status:i?"Ready":"Not ready"});break;default:console.log("Unknown message type:",e.type)}});E("Ready to load model",0,'Click "Setup Local AI" to begin');console.log("🔍 OFFSCREEN DEBUG: Document ready, sending OFFSCREEN_READY message...");chrome.runtime.sendMessage({type:"OFFSCREEN_READY"}).then(()=>{console.log("🔍 OFFSCREEN DEBUG: OFFSCREEN_READY message sent successfully")}).catch(e=>{console.log("🔍 OFFSCREEN DEBUG: Failed to send OFFSCREEN_READY:",e)});console.log("🔍 OFFSCREEN DEBUG: Branestawm offscreen document loaded and ready for messages");console.log("🔍 OFFSCREEN DEBUG: Auto-initialization will trigger after transformers.js loads");
